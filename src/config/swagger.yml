openapi: "3.0.2"
info:
  title: Lo-Fi Radio
  description: OpenApi Docs
  version: "0.0.1"
  contact:
    name: Jorge Junior
    email: jorgelnjunior@gmail.com
    url: https://github.com/JorgeLNJunior
  license:
    name: MIT
    url: https://github.com/JorgeLNJunior/lofi-radio-api/blob/master/LICENSE.md
servers:
  - url: http://localhost:3000
    description: local development server

paths:
  /artists:
    post:
      summary: Registra um novo artista
      description: Registra um novo artista e retorna seus dados.
      tags:
        - "artists"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/artist-register-body"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/artist-register-response"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
    get:
      summary: Retorna artistas
      description: Returna uma lista com 20 artistas criados. Querys ainda não disponíveis
      tags:
        - "artists"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/artists-response"

  /artists/{uuid}/photo:
    post:
      summary: Upload de foto
      description: Realiza o upload da foto do artista.
      tags:
        - "artists"
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/artist-photo-upload-body"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/artist-photo-upload-response"

components:
  schemas:
    artists-response:
      type: object
      properties:
        status:
          type: integer
          example: 200
        artists:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                example: 062b0499-2eaa-4066-8739-10a0f953b8e7
              name:
                type: string
                example: Kudasaibeats
              spotifyUrl:
                type: string
                example: https://open.spotify.com/artist/3VcaBezSFVJHqylrhaYun2
              youtubeUrl:
                type: string
                example: https://www.youtube.com/channel/UCumJMf6sc_oiLpIElQWUiOQ
              soundcloudUrl:
                type: string
                example: https://soundcloud.com/kudasaibeats
              createdAt:
                type: string
                example: 2021-02-10T20:34:19.000Z
              updatedAt:
                type: string
                example: 2021-02-10T20:34:19.000Z

    artist-register-response:
      type: object
      properties:
        artist:
          type: object
          properties:
            status:
              type: number
              default: 200
            user:
              type: object
              properties:
                uuid:
                  type: string
                  example: 062b0499-2eaa-4066-8739-10a0f953b8e7
                name:
                  type: string
                  example: Kudasaibeats
                spotifyUrl:
                  type: string
                  example: https://open.spotify.com/artist/3VcaBezSFVJHqylrhaYun2
                youtubeUrl:
                  type: string
                  example: https://www.youtube.com/channel/UCumJMf6sc_oiLpIElQWUiOQ
                soundcloudUrl:
                  type: string
                  example: https://soundcloud.com/kudasaibeats
                createdAt:
                  type: string
                  example: 2021-02-10T20:34:19.000Z
                updatedAt:
                  type: string
                  example: 2021-02-10T20:34:19.000Z

    artist-register-body:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Kudasaibeats
          description: Nome do artista. Deve ser único.
        spotifyUrl:
          type: string
          example: https://open.spotify.com/artist/3VcaBezSFVJHqylrhaYun2
          description: Link direto para a página do artista no Spotify.
            A URL deve iniciar com "http://" ou "https://", "www" não é obrigatório.
            Também deve seguir o padrão de URL do Spotify (open.spotify.com/artist/).
        youtubeUrl:
          type: string
          example: https://www.youtube.com/channel/UCumJMf6sc_oiLpIElQWUiOQ
          description: Link direto para o canal no YouTube do artista.
            A URL deve iniciar com "http://" ou "https://", "www" não é obrigatório.
            Também deve seguir o padrão de URL do YouTube (youtube.com/channel/).
        soundcloudUrl:
          type: string
          example: https://soundcloud.com/kudasaibeats
          description: Link direto para a página do artista no SoundCloud.
            A URL deve iniciar com "http://" ou "https://", "www" não é obrigatório.
            Também deve seguir o padrão de URL do SoundCloud (soundcloud.com/).

    artist-photo-upload-body:
      type: object
      properties:
        photo:
          type: string
          format: binary

    artist-photo-upload-response:
      type: object
      properties:
        artist:
          type: object
          properties:
            status:
              type: number
              default: 200
            user:
              type: object
              properties:
                uuid:
                  type: string
                  example: 062b0499-2eaa-4066-8739-10a0f953b8e7
                name:
                  type: string
                  example: Kudasaibeats
                spotifyUrl:
                  type: string
                  example: https://open.spotify.com/artist/3VcaBezSFVJHqylrhaYun2
                youtubeUrl:
                  type: string
                  example: https://www.youtube.com/channel/UCumJMf6sc_oiLpIElQWUiOQ
                soundcloudUrl:
                  type: string
                  example: https://soundcloud.com/kudasaibeats
                photoUrl:
                  type: string
                  example: http://localhost:3000/1612990275474.png
                createdAt:
                  type: string
                  example: 2021-02-10T20:34:19.000Z
                updatedAt:
                  type: string
                  example: 2021-02-10T20:34:19.000Z

    bad-request-error:
      type: object
      properties:
        status:
          type: number
          default: 400
        message:
          type: string
          example: bad request
        errors:
          type: array
          items:
            type: string
            example: name must be unique

    unauthorized-error:
      type: object
      properties:
        status:
          type: number
          default: 401
        message:
          type: string
          example: unauthorized
        errors:
          type: array
          items:
            type: string
            example: invalid credentials

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

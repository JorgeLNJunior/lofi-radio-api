openapi: "3.0.2"
info:
  title: Lo-Fi Radio
  description: OpenApi Docs
  version: "1.3.1"
  contact:
    name: Jorge Junior
    email: jorgelnjunior@gmail.com
    url: https://github.com/JorgeLNJunior
  license:
    name: MIT
    url: https://github.com/JorgeLNJunior/lofi-radio-api/blob/master/LICENSE.md
servers:
  - url: http://localhost:3000
    description: servidor local - desenvolvimento
  - url: https://api-lofi-radio.herokuapp.com
    description: servidor remoto - produção

paths:
  /sign:
    post:
      tags:
        - Autorização
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref:  "#/components/schemas/admin-credentials"
      summary: Autorização
      description: Obtem o token de autorização para as rotas http POST.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/sign-response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

  /artists:
    get:
      summary: Listar
      description: Returna uma lista com no máximo 20 artistas criados. Não retorna
        artistas que não tiveram sua foto enviada.
      tags:
        - "Artistas"
      parameters:
        - in: query
          name: uuid
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/artists-response"
        "429":
          $ref: "#/components/responses/too-many-requests"

    post:
      summary: Registrar
      description: Registra um novo artista e retorna seus dados.
      tags:
        - "Artistas"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/artist-register-body"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/artist-register-response"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

  /artists/{uuid}/upload:
    post:
      summary: Upload
      description: Realiza o upload da foto do artista. Após enviado o artista terá
        a propriedade "isHidden" definida como "false", então poderá ser encontrado
        na rota http GET.
      tags:
        - "Artistas"
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/artist-upload-body"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/artist-upload-response"
        "400":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

  /artists/{uuid}:
    patch:
      summary: Atualizar
      description: Atualiza os dados de um artista
      tags:
        - "Artistas"
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/artist-update-body"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/artist-register-response"
        "400":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

    delete:
      summary: Deletar
      description: Deleta um artista da base de dados
      tags:
        - "Artistas"
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delete-response"
        "400":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

  /songs:
    get:
      summary: Listar
      description: Returna uma lista com 20 músicas criadas. Não retorna
        músicas que não tiveram seu arquivo de aúdio e capa enviados.
      tags:
        - "Músicas"
      parameters:
        - in: query
          name: uuid
          schema:
            type: string
        - in: query
          name: title
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/songs-response"
        "429":
          $ref: "#/components/responses/too-many-requests"

    post:
      summary: Registrar
      description: Registra uma nova música e retorna seus dados
      tags:
        - "Músicas"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/song-register-body"
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/song-register-response"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

  /songs/{uuid}/upload:
    post:
      tags:
        - "Músicas"
      summary: Upload
      description: Realiza o upload do arquivo de aúdio e capa do album/música.
        Após enviada a música terá a propriedade "isHidden" definida como "false",
        então poderá ser encontrada na rota http GET.
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/song-upload-body"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/song-register-response"
        '400':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

  /songs/{uuid}:
    patch:
      tags:
        - "Músicas"
      summary: Atualizar
      description: Atualiza os dados de uma música
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/song-update-body"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/song-register-response"
        '400':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

    delete:
      tags:
        - "Músicas"
      summary: Deletar
      description: Deleta uma música da base de dados
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delete-response"
        '400':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

  /playlists:
    get:
      summary: Listar
      description: Returna uma lista com 20 playlists criadas.
      tags:
        - "Playlists"
      parameters:
        - in: query
          name: uuid
          schema:
            type: string
        - in: query
          name: title
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/playlists-response"
        "429":
          $ref: "#/components/responses/too-many-requests"

    post:
      summary: Registrar
      description: Registra uma nova playlist e retorna seus dados
      tags:
        - "Playlists"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref:  "#/components/schemas/playlist-register-body"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/playlist-register-response"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

  /playlists/{uuid}:
    patch:
      summary: Atualizar
      description: Atualizar os dados de uma playlist
      tags:
        - "Playlists"
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/artist-update-body"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/playlist-register-response"
        "400":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

    delete:
      summary: Deletar
      description: Deleta uma playlist da base de dados
      tags:
        - "Playlists"
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delete-response"
        "400":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad-request-error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unauthorized-error"
        "429":
          $ref: "#/components/responses/too-many-requests"

  /socket.io/socket.io.js:
    get:
      tags:
        - "Chat"
      summary: Socket.IO Chat
      description: Rota responsável pela comunicação via Socket.IO do chat.
      requestBody:
        content:
          websocket:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: user
                  message:
                    type: string
                    example: Hi!
      responses:
        default:
          description: OK

components:
  schemas:
    admin-credentials:
      type: object
      properties:
        password:
          type: string
          example: password

    sign-response:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGUzI1NiIsInI6IkpXVCJ9.eyJpYXQ

    artists-response:
      type: object
      properties:
        status:
          type: integer
          example: 200
        artists:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                example: 062b0499-2eaa-4066-8739-10a0f953b8e7
              name:
                type: string
                example: Kudasaibeats
              spotifyUrl:
                type: string
                example: https://open.spotify.com/artist/3VcaBezSFVJHqylrhaYun2
              youtubeUrl:
                type: string
                example: https://www.youtube.com/channel/UCumJMf6sc_oiLpIElQWUiOQ
              soundcloudUrl:
                type: string
                example: https://soundcloud.com/kudasaibeats
              isHidden:
                type: boolean
                default: false
              createdAt:
                type: string
                example: 2021-02-10T20:34:19.000Z
              updatedAt:
                type: string
                example: 2021-02-10T20:34:19.000Z

    artist-register-response:
      type: object
      properties:
        artist:
          type: object
          properties:
            status:
              type: number
              default: 201
            artist:
              type: object
              properties:
                uuid:
                  type: string
                  example: 062b0499-2eaa-4066-8739-10a0f953b8e7
                name:
                  type: string
                  example: Kudasaibeats
                spotifyUrl:
                  type: string
                  example: https://open.spotify.com/artist/3VcaBezSFVJHqylrhaYun2
                youtubeUrl:
                  type: string
                  example: https://www.youtube.com/channel/UCumJMf6sc_oiLpIElQWUiOQ
                soundcloudUrl:
                  type: string
                  example: https://soundcloud.com/kudasaibeats
                isHidden:
                  type: boolean
                  default: true
                createdAt:
                  type: string
                  example: 2021-02-10T20:34:19.000Z
                updatedAt:
                  type: string
                  example: 2021-02-10T20:34:19.000Z

    artist-register-body:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Kudasaibeats
          description: Nome do artista. Deve ser único.
        spotifyUrl:
          type: string
          example: https://open.spotify.com/artist/3VcaBezSFVJHqylrhaYun2
          description: Link direto para a página do artista no Spotify.
            A URL deve iniciar com "http://" ou "https://", "www" não é obrigatório.
            Também deve seguir o padrão de URL do Spotify (open.spotify.com/artist/).
        youtubeUrl:
          type: string
          example: https://www.youtube.com/channel/UCumJMf6sc_oiLpIElQWUiOQ
          description: Link direto para o canal no YouTube do artista.
            A URL deve iniciar com "http://" ou "https://", "www" não é obrigatório.
            Também deve seguir o padrão de URL do YouTube (youtube.com/channel/).
        soundcloudUrl:
          type: string
          example: https://soundcloud.com/kudasaibeats
          description: Link direto para a página do artista no SoundCloud.
            A URL deve iniciar com "http://" ou "https://", "www" não é obrigatório.
            Também deve seguir o padrão de URL do SoundCloud (soundcloud.com/).

    artist-upload-body:
      type: object
      properties:
        photo:
          type: string
          format: binary

    artist-upload-response:
      type: object
      properties:
        artist:
          type: object
          properties:
            status:
              type: number
              default: 200
            artist:
              type: object
              properties:
                uuid:
                  type: string
                  example: 062b0499-2eaa-4066-8739-10a0f953b8e7
                name:
                  type: string
                  example: Kudasaibeats
                spotifyUrl:
                  type: string
                  example: https://open.spotify.com/artist/3VcaBezSFVJHqylrhaYun2
                youtubeUrl:
                  type: string
                  example: https://www.youtube.com/channel/UCumJMf6sc_oiLpIElQWUiOQ
                soundcloudUrl:
                  type: string
                  example: https://soundcloud.com/kudasaibeats
                photoUrl:
                  type: string
                  example: http://localhost:3000/1612990275474.png
                isHidden:
                  type: boolean
                  default: false
                createdAt:
                  type: string
                  example: 2021-02-10T20:34:19.000Z
                updatedAt:
                  type: string
                  example: 2021-02-10T20:34:19.000Z

    artist-update-body:
      type: object
      properties:
        name:
          type: string
          example: Kudasaibeats
          description: Nome do artista. Deve ser único.
        spotifyUrl:
          type: string
          example: https://open.spotify.com/artist/3VcaBezSFVJHqylrhaYun2
          description: Link direto para a página do artista no Spotify.
            A URL deve iniciar com "http://" ou "https://", "www" não é obrigatório.
            Também deve seguir o padrão de URL do Spotify (open.spotify.com/artist/).
        youtubeUrl:
          type: string
          example: https://www.youtube.com/channel/UCumJMf6sc_oiLpIElQWUiOQ
          description: Link direto para o canal no YouTube do artista.
            A URL deve iniciar com "http://" ou "https://", "www" não é obrigatório.
            Também deve seguir o padrão de URL do YouTube (youtube.com/channel/).
        soundcloudUrl:
          type: string
          example: https://soundcloud.com/kudasaibeats
          description: Link direto para a página do artista no SoundCloud.
            A URL deve iniciar com "http://" ou "https://", "www" não é obrigatório.
            Também deve seguir o padrão de URL do SoundCloud (soundcloud.com/).

    songs-response:
      type: object
      properties:
        status:
          type: number
          default: 200
        songs:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                example: 202e4853-0fba-449c-8529-6518a68eaa40
              title:
                type: string
                example: call me
              songUrl:
                type: string
                example: https://lofiradio.blob.core.windows.net/files/songs/audio/1613485744855.mp3
              coverUrl:
                type: string
                example: https://lofiradio.blob.core.windows.net/files/songs/covers/1613485748199.jpg
              isHidden:
                type: boolean
                default: true
              createdAt:
                type: string
                example: 2021-02-10T20:34:19.000Z
              updatedAt:
                type: string
                example: 2021-02-10T20:34:19.000Z
              artists:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      example: 062b0499-2eaa-4066-8739-10a0f953b8e7
                    name:
                      type: string
                      example: 90sFlav
                    spotifyUrl:
                      type: string
                      example: https://open.spotify.com/artist/6OOxsmeDk34xk6Ok3Ap95C
                    youtubeUrl:
                      type: string
                      example: https://www.youtube.com/channel/UC5E_qyrsVIkAmvVzGUae3OA
                    soundcloudUrl:
                      type: string
                      example: https://soundcloud.com/90sflav
                    photoUrl:
                      type: string
                      example: https://lofiradio.blob.core.windows.net/files/artists/photos/1613485748199.jpg
                    createdAt:
                      type: string
                      example: 2021-02-10T20:34:19.000Z
                    updatedAt:
                      type: string
                      example: 2021-02-10T20:34:19.000Z

    song-register-body:
      required:
        - title
        - artistsUuids
      type: object
      properties:
        title:
          type: string
          example: call me
        artistsUuids:
          type: array
          items:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7

    song-register-response:
      type: object
      properties:
        status:
          type: number
          default: 200
        song:
          type: object
          properties:
            uuid:
              type: string
              example: 202e4853-0fba-449c-8529-6518a68eaa40
            title:
              type: string
              example: call me
            songUrl:
              type: string
              example: https://lofiradio.blob.core.windows.net/files/songs/audio/1613485744855.mp3
            coverUrl:
              type: string
              example: https://lofiradio.blob.core.windows.net/files/songs/covers/1613485748199.jpg
            isHidden:
              type: boolean
              default: true
            createdAt:
              type: string
              example: 2021-02-10T20:34:19.000Z
            updatedAt:
              type: string
              example: 2021-02-10T20:34:19.000Z
            artists:
              type: array
              items:
                type: object
                properties:
                  uuid:
                    type: string
                    example: 062b0499-2eaa-4066-8739-10a0f953b8e7
                  name:
                    type: string
                    example: 90sFlav
                  spotifyUrl:
                    type: string
                    example: https://open.spotify.com/artist/6OOxsmeDk34xk6Ok3Ap95C
                  youtubeUrl:
                    type: string
                    example: https://www.youtube.com/channel/UC5E_qyrsVIkAmvVzGUae3OA
                  soundcloudUrl:
                    type: string
                    example: https://soundcloud.com/90sflav
                  photoUrl:
                    type: string
                    example: https://lofiradio.blob.core.windows.net/files/artists/photos/1613485748199.jpg
                  createdAt:
                    type: string
                    example: 2021-02-10T20:34:19.000Z
                  updatedAt:
                    type: string
                    example: 2021-02-10T20:34:19.000Z

    song-update-body:
      type: object
      properties:
        title:
          type: string
          example: call me

    song-upload-body:
      required:
        - song
        - cover
      type: object
      properties:
        song:
          type: string
          format: binary
        cover:
          type: string
          format: binary

    playlists-response:
      type: object
      properties:
        status:
          type: integer
          default: 200
        playlists:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                example: 062b0499-2eaa-4066-8739-10a0f953b8e7
              title:
                type: string
                example: 1 am study session
              originalUrl:
                type: string
                example: http://www.youtube.com/UC5E_qyrsVIkAmvVzGUae3OA
              createdAt:
                type: string
                example: 2021-02-10T20:34:19.000Z
              updatedAt:
                type: string
                example: 2021-02-10T20:34:19.000Z
              songs:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      example: 202e4853-0fba-449c-8529-6518a68eaa40
                    title:
                      type: string
                      example: call me
                    songUrl:
                      type: string
                      example: https://lofiradio.blob.core.windows.net/files/songs/audio/1613485744855.mp3
                    coverUrl:
                      type: string
                      example: https://lofiradio.blob.core.windows.net/files/songs/covers/1613485748199.jpg
                    createdAt:
                      type: string
                      example: 2021-02-10T20:34:19.000Z
                    updatedAt:
                      type: string
                      example: 2021-02-10T20:34:19.000Z
                    artists:
                      type: array
                      items:
                        type: object
                        properties:
                          uuid:
                            type: string
                            example: 062b0499-2eaa-4066-8739-10a0f953b8e7
                          name:
                            type: string
                            example: 90sFlav
                          spotifyUrl:
                            type: string
                            example: https://open.spotify.com/artist/6OOxsmeDk34xk6Ok3Ap95C
                          youtubeUrl:
                            type: string
                            example: https://www.youtube.com/channel/UC5E_qyrsVIkAmvVzGUae3OA
                          soundcloudUrl:
                            type: string
                            example: https://soundcloud.com/90sflav
                          photoUrl:
                            type: string
                            example: https://lofiradio.blob.core.windows.net/files/artists/photos/1613485748199.jpg
                          createdAt:
                            type: string
                            example: 2021-02-10T20:34:19.000Z
                          updatedAt:
                            type: string
                            example: 2021-02-10T20:34:19.000Z

    playlist-register-body:
      required:
        - title
        - songsUuids
      type: object
      properties:
        title:
          type: string
          example: 1 am study session
        originalUrl:
          type: string
          example: http://www.youtube.com/UC5E_qyrsVIkAmvVzGUae3OA
        songsUuids:
          type: array
          items:
            type: string
            example: 062b0499-2eaa-4066-8739-10a0f953b8e7

    playlist-register-response:
      type: object
      properties:
        status:
          type: string
          default: 200
        playlist:
          type: object
          properties:
            uuid:
              type: string
              example: 062b0499-2eaa-4066-8739-10a0f953b8e7
            title:
              type: string
              example: 1 am study session
            originalUrl:
              type: string
              example: http://www.youtube.com/UC5E_qyrsVIkAmvVzGUae3OA
            createdAt:
              type: string
              example: 2021-02-10T20:34:19.000Z
            updatedAt:
              type: string
              example: 2021-02-10T20:34:19.000Z
            songs:
              type: array
              items:
                type: object
                properties:
                  uuid:
                    type: string
                    example: 202e4853-0fba-449c-8529-6518a68eaa40
                  title:
                    type: string
                    example: call me
                  songUrl:
                    type: string
                    example: https://lofiradio.blob.core.windows.net/files/songs/audio/1613485744855.mp3
                  coverUrl:
                    type: string
                    example: https://lofiradio.blob.core.windows.net/files/songs/covers/1613485748199.jpg
                  createdAt:
                    type: string
                    example: 2021-02-10T20:34:19.000Z
                  updatedAt:
                    type: string
                    example: 2021-02-10T20:34:19.000Z
                  artists:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          example: 062b0499-2eaa-4066-8739-10a0f953b8e7
                        name:
                          type: string
                          example: 90sFlav
                        spotifyUrl:
                          type: string
                          example: https://open.spotify.com/artist/6OOxsmeDk34xk6Ok3Ap95C
                        youtubeUrl:
                          type: string
                          example: https://www.youtube.com/channel/UC5E_qyrsVIkAmvVzGUae3OA
                        soundcloudUrl:
                          type: string
                          example: https://soundcloud.com/90sflav
                        photoUrl:
                          type: string
                          example: https://lofiradio.blob.core.windows.net/files/artists/photos/1613485748199.jpg
                        createdAt:
                          type: string
                          example: 2021-02-10T20:34:19.000Z
                        updatedAt:
                          type: string
                          example: 2021-02-10T20:34:19.000Z

    playlist-update-body:
      type: object
      properties:
        title:
          type: string
          example: 1 am study session
        originalUrl:
          type: string
          example: http://www.youtube.com/UC5E_qyrsVIkAmvVzGUae3OA

    delete-response:
      type: object
      properties:
        status:
          type: number
          default: 200
        message:
          type: string
          example: resource deleted

    bad-request-error:
      type: object
      properties:
        status:
          type: number
          default: 400
        message:
          type: string
          example: bad request
        errors:
          type: array
          items:
            type: string
            example: error description

    unauthorized-error:
      type: object
      properties:
        status:
          type: number
          default: 401
        message:
          type: string
          example: unauthorized
        errors:
          type: array
          items:
            type: string
            example: invalid credentials

    too-many-requests:
      type: string
      default: Too many requests, please try again later.

    internal-error:
      type: object
      properties:
        status:
          type: number
          default: 401
        message:
          type: string
          example: internal error
        errors:
          type: array
          items:
            type: string

  responses:
    too-many-requests:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/too-many-requests"


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
